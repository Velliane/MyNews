apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.menard.mynews"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        debug {
            testCoverageEnabled true
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
       group = "Reporting"
       description = "Generate Jacoco coverage reports"
       reports {
           xml.enabled = true
           html.enabled = true
       }

       def fileFilter = [
               '**/R.class','**/R$*.class',
               '**/BuildConfig.*', '**/Manifest*.*', 'android/**/*.*', '**/Lambda$*.class',
               '**/Lambda.class','**/*Lambda.class','**/*Lambda*.class','**/*Lambda*.*',
               '**/*Builder.*','**/*_MembersInjector.class', '**/*_MembersInjector*.*',
               '**/*_*Factory*.*', '**/*Component*.*', '**/*Module*.*'
       ]
       def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
       def mainSrc = "${project.projectDir}/src/main/java"
       sourceDirectories = files([mainSrc])
       classDirectories = files([debugTree])
       executionData = fileTree(dir: project.projectDir, includes:['**/*.exec' , '**/*.ec'])
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.test:runner:1.3.0-alpha02'

    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta03'
    implementation 'com.google.android.material:material:1.1.0-alpha09'

    testImplementation 'junit:junit:4.13-beta-3'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'org.mockito:mockito-android:2.7.15'

    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:retrofit-mock:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    implementation 'saschpe.android:customtabs:2.0.0'
    implementation 'com.android.support:customtabs:28.0.0'

    implementation "android.arch.work:work-runtime:1.0.1"

}
